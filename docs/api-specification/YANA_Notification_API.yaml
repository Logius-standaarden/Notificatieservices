openapi: 3.0.0
info:
  title: YANA Notification API
  description: 'YANA Notifications API
    YANA (Yet Another Notification API)

    API to publish notifications.
    Work in progress. Can be changed completely without notice.

    The API is based on the [GOV NL profile for CloudEvents](https://vng-realisatie.github.io/NL-GOV-profile-for-CloudEvents).
    '
  license:
    name: EUPL 1.2
    url: https://opensource.org/licenses/EUPL-1.2
  version: 0.0.2
security:
- JWT-Claims: []
paths:
  /events:
    post:
      operationId: events_post
      description: 'Publish a event.
        The component will distribute the event to the subscribers when the criteria of a subscription are met.'
      parameters:
      - name: Content-Type
        in: header
        description: HTTP Content-Type
        required: true
        schema:
          type: string
          enum:
            - "application/cloudevents+json"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: ''
          headers:
            API-version:
              schema:
                type: string
              description: 'API-version in the context of the call. Example: 1.2.1.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      tags:
      - notifications
    parameters: []
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/KorverInformatica/subscription/0.0.1
- url: /api/v1
components:
  securitySchemes:
    JWT-Claims:
      bearerFormat: JWT
      scheme: bearer
      type: http
  schemas:
    EventCore:
      required:
      - id
      - source
      - specversion
      - type
      type: object
      properties:
        specversion:
          title: specversion
          description: The version of the CloudEvents specification which the event uses.
          type: string
          minLength: 1
          example: '1.0'
        id:
          title: id
          description: Identifies the event.
          type: string
          format: uuid
          minLength: 1
          example: '2febb675-b06c-4f3a-8fc3-f6649aa25ae4'
        source:
          title: source
          description: Identifies the context in which an event happened.
          type: string
          format: urn
          minLength: 1
          example: 'urn:nld:oin:00000001234567890000:systeem:DocumentSysteem'
        yana.domain:
          title: domain
          description: Name of the domain to which the event belongs.
          type: string
          minLength: 1
          nullable: true
          example: 'nl.vng.zgw.documenten'
        type:
          title: type
          description: This attribute contains a value describing the type of event related to the originating occurrence.
          type: string
          format: reverse-dns
          minLength: 1
          example: 'nl.vng.zgw.documenten.document_gecreerd'
        # subject:
        #   title: subject
        #   description: This describes the subject of the event in the context of the event producer (identified by source).
        #   type: string
        #   minLength: 1
        #   nullable: true
        #   example: 'nl.brp.persoon'
        time:
          title: time
          description: Timestamp of when the occurrence happened.
          type: string
          format: date-time
          minLength: 1
          nullable: true
          example: '2021-08-16T15:29:30.833664Z'
        yana.subscriptionId:
          title: yana.subscriptionId
          description: Event meets the filter criteria of this subscription.
          type: string
          format: uuid
          minLength: 1
          nullable: true
          example: 'a2de4777-1160-4562-a996-b79d27b30c99'
        datacontenttype:
          title: datacontenttype
          description: Content type of data value. [RFC 2046](https://tools.ietf.org/html/rfc2046)
          type: string
          minLength: 1
          nullable: true
          example: 'application/json'
        dataschema:
          title: dataschema
          description: Identifies the schema that data adheres to.
          type: string
          format: uri
          minLength: 1
          nullable: true
          example: 'https:www.vng.nl/zgw/documenten/document_gecreerd_schema.json'
        sequence:
          description: Value expressing the relative order of the event. This enables interpretation of data supercedence.
          type: string
          minLength: 1
          example: '42'
        sequencetype:
          description: Specifies the semantics of the sequence attribute.
          type: string
          minLength: 1
          nullable: true
          enum:
            - Integer
    EventExtension:
      type: object
      properties:
        nl.<domain>.<key1>:
          type: string
          example: '<value1>'
        nl.<domain>.<key2>:
          type: string
          example: '<value2>'
        nl.<domain>.<keyN>:
          type: string
          example: '<valueN>'
    EventData:
      required:
        - eventData1
        - eventData2
        - eventDataN
      properties:
        eventData1:
          description: domain specific event data 1
          type: string
        eventData2:
          description: domain specific event data 2
          type: string
        eventDataN:
          description: domain specific event data N
          type: string
    Event:
      allOf:
        - $ref: "#/components/schemas/EventCore"
        - $ref: "#/components/schemas/EventExtension"
        - properties:
            data:
              $ref: "#/components/schemas/EventData"
            data_base64:
              description: The presence of the data_base64 member clearly indicates that the value is a Base64 encoded binary data, which the serializer MUST decode into a binary runtime data type.
              type: string
              format: byte
              nullable: true
            dataref:
              description: A reference to a location where the event payload is stored.
              type: string
              format: uri
              minLength: 1
              nullable: true
